name: Docker

on: [push]

jobs:
  frontend:
    runs-on: ubuntu-latest
    if: github.actor != 'dependabot[bot]'

    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-buildx-action@v1

      - uses: docker/login-action@v1
        with:
          registry: registry.misw.jp
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            registry.misw.jp/portal/frontend
          tags: |
            type=ref,event=branch
            type=sha

      - name: Build and push image for frontend
        uses: docker/build-push-action@v2
        with:
          push: true
          context: .
          file: frontend.Dockerfile
          target: production
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
  backend:
    runs-on: ubuntu-latest
    if: github.actor != 'dependabot[bot]'

    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-buildx-action@v1

      - uses: docker/login-action@v1
        with:
          registry: registry.misw.jp
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            registry.misw.jp/portal/backend
          tags: |
            type=ref,event=branch
            type=sha

      - name: Build and push image for API server
        uses: docker/build-push-action@v2
        with:
          push: true
          context: .
          file: backend.Dockerfile
          target: production
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
