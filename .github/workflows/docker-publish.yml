name: Docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  push

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}


jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    strategy:
      matrix:
        include:
          - name: frontend
            file: frontend.Dockerfile
            target: production
          - name: backend
            file: backend.Dockerfile
            target: production

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        uses: sigstore/cosign-installer@main
        with:
          cosign-release: 'v1.4.1'

      # https://github.com/docker/setup-buildx-action
      - name: Setup Docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      # Workaround: https://github.com/docker/build-push-action/
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          file: ${{ matrix.file }}
          target: ${{ matrix.target }}

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/${{ matrix.name }}
          tags: |
            type=ref,event=branch
            type=sha

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: ${{ github.actor != 'dependabot[bot]' }}
          file: ${{ matrix.file }}
          target: ${{ matrix.target }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: ${{ format('type=registry,ref=ghcr.io/{0}/{1}:build-cache', env.IMAGE_NAME, matrix.name) }}
          cache-to: |
            ${{
               (github.actor != 'dependabot[bot]' && format('type=registry,ref=ghcr.io/{0}/{1}:build-cache,mode=max', env.IMAGE_NAME, matrix.name))
            || (github.actor == 'dependabot[bot]' && 'type=inline')
            }}1

      # Sign the resulting Docker image digest except on PRs.
      # This will only write to the public Rekor transparency log when the Docker
      # repository is public to avoid leaking data.  If you would like to publish
      # transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign
      - name: Sign the published Docker image
        env:
          COSIGN_EXPERIMENTAL: "true"
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: cosign sign ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/${{ matrix.name }}@${{ steps.build-and-push.outputs.digest }}
