// Code generated by MockGen. DO NOT EDIT.
// Source: interfaces/api/public/card.go

// Package public is a generated GoMock package.
package public

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	echo "github.com/labstack/echo/v4"
)

// MockCardHandler is a mock of CardHandler interface.
type MockCardHandler struct {
	ctrl     *gomock.Controller
	recorder *MockCardHandlerMockRecorder
}

// MockCardHandlerMockRecorder is the mock recorder for MockCardHandler.
type MockCardHandlerMockRecorder struct {
	mock *MockCardHandler
}

// NewMockCardHandler creates a new mock instance.
func NewMockCardHandler(ctrl *gomock.Controller) *MockCardHandler {
	mock := &MockCardHandler{ctrl: ctrl}
	mock.recorder = &MockCardHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCardHandler) EXPECT() *MockCardHandlerMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockCardHandler) Get(e echo.Context, id string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", e, id)
	ret0, _ := ret[0].(error)
	return ret0
}

// Get indicates an expected call of Get.
func (mr *MockCardHandlerMockRecorder) Get(e, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockCardHandler)(nil).Get), e, id)
}
