// Code generated by MockGen. DO NOT EDIT.
// Source: usecase/externalIntegration.go

// Package usecase is a generated GoMock package.
package usecase

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockExternalIntegrationUsecase is a mock of ExternalIntegrationUsecase interface.
type MockExternalIntegrationUsecase struct {
	ctrl     *gomock.Controller
	recorder *MockExternalIntegrationUsecaseMockRecorder
}

// MockExternalIntegrationUsecaseMockRecorder is the mock recorder for MockExternalIntegrationUsecase.
type MockExternalIntegrationUsecaseMockRecorder struct {
	mock *MockExternalIntegrationUsecase
}

// NewMockExternalIntegrationUsecase creates a new mock instance.
func NewMockExternalIntegrationUsecase(ctrl *gomock.Controller) *MockExternalIntegrationUsecase {
	mock := &MockExternalIntegrationUsecase{ctrl: ctrl}
	mock.recorder = &MockExternalIntegrationUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockExternalIntegrationUsecase) EXPECT() *MockExternalIntegrationUsecaseMockRecorder {
	return m.recorder
}

// GetAllMemberRolesBySlackID mocks base method.
func (m *MockExternalIntegrationUsecase) GetAllMemberRolesBySlackID(ctx context.Context) (map[string]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllMemberRolesBySlackID", ctx)
	ret0, _ := ret[0].(map[string]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllMemberRolesBySlackID indicates an expected call of GetAllMemberRolesBySlackID.
func (mr *MockExternalIntegrationUsecaseMockRecorder) GetAllMemberRolesBySlackID(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllMemberRolesBySlackID", reflect.TypeOf((*MockExternalIntegrationUsecase)(nil).GetAllMemberRolesBySlackID), ctx)
}

// GetUserRoleFromSlackID mocks base method.
func (m *MockExternalIntegrationUsecase) GetUserRoleFromSlackID(slackID string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserRoleFromSlackID", slackID)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUserRoleFromSlackID indicates an expected call of GetUserRoleFromSlackID.
func (mr *MockExternalIntegrationUsecaseMockRecorder) GetUserRoleFromSlackID(slackID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserRoleFromSlackID", reflect.TypeOf((*MockExternalIntegrationUsecase)(nil).GetUserRoleFromSlackID), slackID)
}
