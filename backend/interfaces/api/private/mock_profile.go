// Code generated by MockGen. DO NOT EDIT.
// Source: interfaces/api/private/profile.go

// Package private is a generated GoMock package.
package private

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	echo "github.com/labstack/echo/v4"
)

// MockProfileHandler is a mock of ProfileHandler interface.
type MockProfileHandler struct {
	ctrl     *gomock.Controller
	recorder *MockProfileHandlerMockRecorder
}

// MockProfileHandlerMockRecorder is the mock recorder for MockProfileHandler.
type MockProfileHandlerMockRecorder struct {
	mock *MockProfileHandler
}

// NewMockProfileHandler creates a new mock instance.
func NewMockProfileHandler(ctrl *gomock.Controller) *MockProfileHandler {
	mock := &MockProfileHandler{ctrl: ctrl}
	mock.recorder = &MockProfileHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockProfileHandler) EXPECT() *MockProfileHandlerMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockProfileHandler) Get(e echo.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", e)
	ret0, _ := ret[0].(error)
	return ret0
}

// Get indicates an expected call of Get.
func (mr *MockProfileHandlerMockRecorder) Get(e interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockProfileHandler)(nil).Get), e)
}

// GetPaymentStatuses mocks base method.
func (m *MockProfileHandler) GetPaymentStatuses(e echo.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPaymentStatuses", e)
	ret0, _ := ret[0].(error)
	return ret0
}

// GetPaymentStatuses indicates an expected call of GetPaymentStatuses.
func (mr *MockProfileHandlerMockRecorder) GetPaymentStatuses(e interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPaymentStatuses", reflect.TypeOf((*MockProfileHandler)(nil).GetPaymentStatuses), e)
}

// GetPaymentTransaction mocks base method.
func (m *MockProfileHandler) GetPaymentTransaction(e echo.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPaymentTransaction", e)
	ret0, _ := ret[0].(error)
	return ret0
}

// GetPaymentTransaction indicates an expected call of GetPaymentTransaction.
func (mr *MockProfileHandlerMockRecorder) GetPaymentTransaction(e interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPaymentTransaction", reflect.TypeOf((*MockProfileHandler)(nil).GetPaymentTransaction), e)
}

// Update mocks base method.
func (m *MockProfileHandler) Update(e echo.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", e)
	ret0, _ := ret[0].(error)
	return ret0
}

// Update indicates an expected call of Update.
func (mr *MockProfileHandlerMockRecorder) Update(e interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockProfileHandler)(nil).Update), e)
}
