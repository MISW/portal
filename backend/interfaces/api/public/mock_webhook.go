// Code generated by MockGen. DO NOT EDIT.
// Source: interfaces/api/public/webhook.go

// Package public is a generated GoMock package.
package public

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	echo "github.com/labstack/echo/v4"
)

// MockWebhookHandler is a mock of WebhookHandler interface.
type MockWebhookHandler struct {
	ctrl     *gomock.Controller
	recorder *MockWebhookHandlerMockRecorder
}

// MockWebhookHandlerMockRecorder is the mock recorder for MockWebhookHandler.
type MockWebhookHandlerMockRecorder struct {
	mock *MockWebhookHandler
}

// NewMockWebhookHandler creates a new mock instance.
func NewMockWebhookHandler(ctrl *gomock.Controller) *MockWebhookHandler {
	mock := &MockWebhookHandler{ctrl: ctrl}
	mock.recorder = &MockWebhookHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWebhookHandler) EXPECT() *MockWebhookHandlerMockRecorder {
	return m.recorder
}

// Slack mocks base method.
func (m *MockWebhookHandler) Slack(e echo.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Slack", e)
	ret0, _ := ret[0].(error)
	return ret0
}

// Slack indicates an expected call of Slack.
func (mr *MockWebhookHandlerMockRecorder) Slack(e interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Slack", reflect.TypeOf((*MockWebhookHandler)(nil).Slack), e)
}
